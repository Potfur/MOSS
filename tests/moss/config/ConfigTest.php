<?php
namespace moss\config;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-16 at 21:59:22.
 */
class ConfigTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @dataProvider importProvider
     */
    public function testImportExport($result)
    {
        $default = array(
            'framework' => array(
                'error' => array('level' => -1, 'detail' => true),
                'session' => array('host' => true, 'ip' => true, 'agent' => true, 'salt' => null),
                'cookie' => array('domain' => null, 'path' => '/', 'http' => true)
            ),
            'namespaces' => array(),
            'container' => array(),
            'dispatcher' => array(),
            'router' => array(),
        );
        $Config = new Config();
        $Config->import($result);
        $this->assertEquals(array_merge($default, $result), $Config->export());
    }

    public function importProvider()
    {
        return array(
            array(
                array(
                    'framework' => array(
                        'error' => array('level' => E_ALL | E_NOTICE, 'detail' => true),
                        'session' => array('host' => true, 'ip' => true, 'agent' => true, 'salt' => null),
                        'cookie' => array('domain' => null, 'path' => '/', 'http' => true)
                    ),
                )
            ),
            array(
                array(
                    'namespaces' => array(),
                )
            ),
            array(
                array(
                    'container' => array(
                        'foo' => 'bar',
                        'component' => array(
                            'class' => '\stdClass',
                            'arguments' => array(),
                            'methods' => array(),
                            'shared' => false
                        )
                    ),
                )
            ),
            array(
                array(
                    'dispatcher' => array(
                        'foo' => array(
                            'component' => array(
                                'component' => 'foo',
                                'method' => array(),
                                'arguments' => array(),
                            )
                        )
                    ),
                )
            ),
            array(
                array(
                    'router' => array(
                        'routeName' => array(
                            'pattern' => '/{foo}/({bar})/',
                            'controller' => 'Moss:sample:Sample:index',
                            'requirements' => array(
                                'foo' => '\w+',
                                'bar' => '\w*'
                            ),
                            'defaults' => array(
                                'foo' => 'foo'
                            ),
                            'arguments' => array(
                                'locale' => 'pl',
                                'format' => 'json'
                            ),
                            'host' => null,
                            'schema' => null,
                            'methods' => array('GET', 'POST')
                        )
                    )
                )
            )
        );
    }

    /**
     * @expectedException \moss\config\ConfigException
     */
    public function testInvalidDispatcherImport()
    {
        $result = array(
            'dispatcher' => array(
                'foo' => array(
                    'yada' => array()
                )
            )
        );

        $Config = new Config();
        $Config->import($result);
    }

    /**
     * @expectedException \moss\config\ConfigException
     */
    public function testInvalidRouterImportWithoutPattern()
    {
        $result = array(
            'router' => array(
                'routeName' => array(
                    'controller' => 'yada:yada'
                )
            )
        );

        $Config = new Config();
        $Config->import($result);
    }

    /**
     * @expectedException \moss\config\ConfigException
     */
    public function testInvalidRouterImportWithoutController()
    {
        $result = array(
            'router' => array(
                'routeName' => array(
                    'pattern' => 'yada/yada'
                )
            )
        );

        $Config = new Config();
        $Config->import($result);
    }

    public function testGet()
    {
        $result = array(
            'level' => E_ALL | E_NOTICE,
            'detail' => true
        );

        $Config = new Config(array('framework' => array('error' => $result)));
        $this->assertEquals($result, $Config->get('framework.error'));
    }

    public function testGetDeep()
    {
        $Config = new Config(array('framework' => array('error' => array('detail' => true))));
        $this->assertTrue($Config->get('framework.error.detail'));
    }

    public function testGetBlank()
    {
        $Config = new Config();
        $this->assertNull($Config->get('foo'));
    }

    public function testGetDeepBlank()
    {
        $Config = new Config();
        $this->assertNull($Config->get('directories.foo'));
    }
}
